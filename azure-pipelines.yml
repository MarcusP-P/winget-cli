pool:
  vmImage: 'windows-latest'

variables:
  solution: 'src/AppInstallerCLI.sln'
  buildPlatform: 'x86|x64|ARM'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'

- job: 'Build'
  condition: always()
  variables:
    BuildVer: 2
  steps:
  - task: NuGetToolInstaller@1
    displayName: Install Nuget
  
  - task: NuGetCommand@2
    displayName: Restore Packages
    inputs:
      restoreSolution: '$(solution)'
  
  - task: DotNetCoreCLI@2
    displayName: DotNet Restore
    inputs:
      command: 'restore'
      projects: '**/*.csproj'
  
  - task: VSBuild@1
    displayName: Build Solution
    inputs:
      platform: 'x86'
      solution: '$(solution)'
      configuration: '$(buildConfiguration)'
      msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" 
                    /p:AppxPackageDir="$(appxPackageDir)" 
                    /p:AppxBundle=Always 
                    /p:UapAppxPackageBuildMode=StoreUpload'
  
  - task: PowerShell@2
    displayName: Install Tests Dependencies
    inputs:
      targetType: 'inline'
      script: |
        Add-AppxPackage AppInstallerCLIPackage_0.0.2.0_Test\Dependencies\x86\Microsoft.VCLibs.x86.14.00.Desktop.appx
        Add-AppxPackage AppInstallerCLIPackage_0.0.2.0_Test\Dependencies\x64\Microsoft.VCLibs.x64.14.00.Desktop.appx
      workingDirectory: $(appxPackageDir)

  - task: VisualStudioTestPlatformInstaller@1
    displayName: Prepare VSTest for E2E Tests
    inputs:
      packageFeedSelector: 'nugetOrg'

# TODO: Convert tests to run based on the whether things have worked up to this point

  
  - task: PowerShell@2
    displayName: Run Unit Tests Packaged x64
    inputs:
      filePath: 'src\AppInstallerCLITests\Run-TestsInPackage.ps1'
      arguments: '-Args "~[pips]" -BuildRoot x64\Release -PackageRoot AppInstallerCLIPackage\bin\x64\Release -LogTarget x64\Release\AICLI-Packaged-x64.log -TestResultsTarget x64\Release\TEST-AppInstallerCLI-Packaged-x64.xml -ScriptWait'
      workingDirectory: 'src'
    condition: succeededOrFailed()
  
  - task: PublishBuildArtifacts@1
    displayName: Publish Unit Tests Packaged Log x64
    inputs:
      PathtoPublish: 'src\x64\Release\AICLI-Packaged-x64.log'
      ArtifactName: 'TestPassPackagedLog'
      publishLocation: 'Container'
    condition: succeededOrFailed()
  
  - task: PublishBuildArtifacts@1
    displayName: Publish Unit Tests Packaged Output x64
    inputs:
      PathtoPublish: 'src\x64\Release\TEST-AppInstallerCLI-Packaged-x64.xml'
      ArtifactName: 'TestPassPackagedOutput'
      publishLocation: 'Container'
    condition: succeededOrFailed()

  - task: PowerShell@2
    displayName: Run Unit Tests Packaged x86
    inputs:
      filePath: 'src\AppInstallerCLITests\Run-TestsInPackage.ps1'
      arguments: '-Args "~[pips]" -BuildRoot x86\Release -PackageRoot AppInstallerCLIPackage\bin\x86\Release -LogTarget x86\Release\AICLI-Packaged-x86.log -TestResultsTarget x86\Release\TEST-AppInstallerCLI-Packaged-x86.xml -ScriptWait'
      workingDirectory: 'src'
    condition: succeededOrFailed()
  
  - task: PublishBuildArtifacts@1
    displayName: Publish Unit Tests Packaged Log x86
    inputs:
      PathtoPublish: 'src\x86\Release\AICLI-Packaged-x86.log'
      ArtifactName: 'TestPassPackagedLog'
      publishLocation: 'Container'
    condition: succeededOrFailed()
  
  - task: PublishBuildArtifacts@1
    displayName: Publish Unit Tests Packaged Output x86
    inputs:
      PathtoPublish: 'src\x86\Release\TEST-AppInstallerCLI-Packaged-x86.xml'
      ArtifactName: 'TestPassPackagedOutput'
      publishLocation: 'Container'
    condition: succeededOrFailed()
  
  - task: PublishTestResults@2
    displayName: Publish Unit Test Results
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/TEST-*.xml'
      failTaskOnFailedTests: true
    condition: succeededOrFailed()

  - task: VSTest@2
    displayName: Run E2E Tests Packaged x64
    inputs:
      testSelector: 'testAssemblies'
      testAssemblyVer2: 'src\x64\Release\AppInstallerCLIE2ETests\AppInstallerCLIE2ETests.dll'
      runSettingsFile: 'src\x64\Release\AppInstallerCLIE2ETests\Test.runsettings'
      overrideTestrunParameters: '-PackagedContext true
                                  -AICLIPackagePath $(system.defaultWorkingDirectory)\src\AppInstallerCLIPackage\bin\x64\Release
                                  -AICLIPath AppInstallerCLI\AppInstallerCLI.exe
                                  -LooseFileRegistration true
                                  -InvokeCommandInDesktopPackage true'
    condition: succeededOrFailed()

  - task: VSTest@2
    displayName: Run E2E Tests Packaged x86
    inputs:
      testSelector: 'testAssemblies'
      testAssemblyVer2: 'src\x86\Release\AppInstallerCLIE2ETests\AppInstallerCLIE2ETests.dll'
      runSettingsFile: 'src\x86\Release\AppInstallerCLIE2ETests\Test.runsettings'
      overrideTestrunParameters: '-PackagedContext true
                                  -AICLIPackagePath $(system.defaultWorkingDirectory)\src\AppInstallerCLIPackage\bin\x86\Release
                                  -AICLIPath AppInstallerCLI\AppInstallerCLI.exe
                                  -LooseFileRegistration true
                                  -InvokeCommandInDesktopPackage true'
    condition: succeededOrFailed()
  
  - task: PublishBuildArtifacts@1
    displayName: Publish CLI Binary
    inputs:
      PathtoPublish: 'src\x64\Release\AppInstallerCLI\AppInstallerCLI.exe'
      ArtifactName: 'AppInstallerCLI.exe'
      publishLocation: 'Container'
  
  - task: PublishBuildArtifacts@1
    displayName: Publish Util Binary
    inputs:
      PathtoPublish: 'src\x64\Release\WinGetUtil\WinGetUtil.dll'
      ArtifactName: 'WinGetUtil.dll'
      publishLocation: 'Container'

  - task: PublishBuildArtifacts@1
    displayName: Publish Util Symbols
    inputs:
      PathtoPublish: 'src\x64\Release\WinGetUtil\WinGetUtil.pdb'
      ArtifactName: 'WinGetUtil.pdb'
      publishLocation: 'Container'
  
  - task: ComponentGovernanceComponentDetection@0
    displayName: Component Governance
    inputs:
      scanType: 'Register'
      verbosity: 'Verbose'
      alertWarningLevel: 'High'